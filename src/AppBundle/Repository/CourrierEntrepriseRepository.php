<?php

namespace AppBundle\Repository;

/**
 * CourrierEntrepriseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CourrierEntrepriseRepository extends \Doctrine\ORM\EntityRepository
{
    public function findByServiceAnneePeriode($service, $annee)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT  SUBSTRING(c.date, 1, 7) AS periode, SUM(c.volume) AS plis,  COUNT(c)  as nombre
                 FROM AppBundle:CourrierEntreprise c
                 WHERE c.entrepriseservice = :service
                 AND c.date LIKE :periode
                 GROUP BY c.entrepriseservice, periode
                 ORDER BY periode DESC'
            )->setParameter('service', $service)
            ->setParameter('periode', $annee)
             ->getResult();
    }
    
    public function findByServicePeriode($service, $periode)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT  c FROM AppBundle:CourrierEntreprise c
                 WHERE c.entrepriseservice = :service
                 AND c.date LIKE :periode'
            )->setParameter('service', $service)
            ->setParameter('periode', $periode)
             ->getResult();
    }
    
    public function findByServicePeriodeNull($service, $periode)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT  c FROM AppBundle:CourrierEntreprise c
                 WHERE c.entrepriseservice = :service
                 AND c.date LIKE :periode
                 AND c.accesreferenceservice IS NULL'
            )->setParameter('service', $service)
            ->setParameter('periode', $periode)
             ->getResult();
    }
    
     public function findByServicePeriodeNotNull($service, $periode)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT  c FROM AppBundle:CourrierEntreprise c
                 WHERE c.entrepriseservice = :service
                 AND c.date LIKE :periode
                 AND c.accesreferenceservice IS NOT NULL'
            )->setParameter('service', $service)
            ->setParameter('periode', $periode)
             ->getResult();
    }
    
    public function findByServiceReference($service, $reference)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT  c FROM AppBundle:CourrierEntreprise c
                 WHERE c.entrepriseservice = :service
                 AND c.nomPDF = :reference'
            )->setParameter('service', $service)
            ->setParameter('reference', $reference)
             ->getResult();
    }
    
    public function findByReference($reference)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT  c FROM AppBundle:CourrierEntreprise c
                 WHERE c.accesreferenceservice = :reference'
            )->setParameter('reference', $reference)
             ->getResult();
    }
    
    public function findByMsAnnee($annee)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT SUBSTRING(c.date, 1, 7) AS periode
                 FROM AppBundle:CourrierEntreprise c
                 WHERE c.date LIKE :periode
                 GROUP BY periode
                 ORDER BY periode DESC'
            )->setParameter('periode', $annee)
             ->getResult();
    }
    
    public function findByMsAnneeEssai($annee)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT SUBSTRING(c.date, 1, 7) AS periode
                 FROM AppBundle:CourrierEntreprise c
                 WHERE c.date LIKE :periode
                 AND c.essai = :essai
                 GROUP BY periode
                 ORDER BY periode DESC'
            )->setParameter('periode', $annee)
                ->setParameter('essai', 'non')
             ->getResult();
    }
    
    public function findByMsAnneeEntreprise($annee, $entreprise)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT SUBSTRING(c.date, 1, 7) AS periode
                 FROM AppBundle:CourrierEntreprise c
                 JOIN c.entrepriseservice s
                 WHERE c.date LIKE :periode
                 AND   s.entreprise = :entreprise
                 GROUP BY periode
                 ORDER BY periode DESC'
            )->setParameter('periode', $annee)
             ->setParameter('entreprise', $entreprise)
             ->getResult();
    }
    
    public function findByMsAnneeEntrepriseEssai($annee, $entreprise)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT SUBSTRING(c.date, 1, 7) AS periode
                 FROM AppBundle:CourrierEntreprise c
                 JOIN c.entrepriseservice s
                 WHERE c.date LIKE :periode
                 AND   s.entreprise = :entreprise
                 AND   c.essai = :essai
                 GROUP BY periode
                 ORDER BY periode DESC'
            )->setParameter('periode', $annee)
             ->setParameter('entreprise', $entreprise)
             ->setParameter('essai', 'non')
             ->getResult();
    }
    
    
     public function findByPeriodeEntreprises($periode)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT  DISTINCT e.id FROM AppBundle:CourrierEntreprise c
                 JOIN   c.entrepriseservice s
                 JOIN   s.entreprise e
                 WHERE c.date LIKE :periode'
            )->setParameter('periode', $periode)
             ->getResult();
    }
    
     public function findByPeriodeEntreprisesEssai($periode)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT  DISTINCT e.id FROM AppBundle:CourrierEntreprise c
                 JOIN   c.entrepriseservice s
                 JOIN   s.entreprise e
                 WHERE c.date LIKE :periode
                 AND c.essai = :essai'
            )->setParameter('periode', $periode)
                ->setParameter('essai', 'non')
             ->getResult();
    }
    
     public function findByEntreprisePeriode($entreprise, $periode)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT   s.id, SUM(c.volume) as somme FROM AppBundle:CourrierEntreprise c
                 JOIN     c.entrepriseservice s
                 WHERE    s.entreprise = :entreprise
                 AND      c.date LIKE :periode
                 GROUP BY  c.entrepriseservice'
            )->setParameter('entreprise', $entreprise)
            ->setParameter('periode', $periode)
             ->getResult();
    }
    
     public function findByEntreprisePeriodeEssai($entreprise, $periode)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT   s.id, SUM(c.volume) as somme FROM AppBundle:CourrierEntreprise c
                 JOIN     c.entrepriseservice s
                 WHERE    s.entreprise = :entreprise
                 AND      c.date LIKE :periode
                 AND      c.essai = :essai
                 GROUP BY  c.entrepriseservice'
            )->setParameter('entreprise', $entreprise)
            ->setParameter('periode', $periode)
                 ->setParameter('essai', 'non')
             ->getResult();
    }
    
    
    public function findByUsager($usager)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT c FROM AppBundle:CourrierEntreprise c
                 JOIN c.accesreferenceservice a
                 WHERE a.usager = :usager
                 ORDER BY c.id DESC'
            )->setParameter('usager', $usager)
             ->getResult();
    }
    
    public function findByUsagerRead($usager)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT c FROM AppBundle:CourrierEntreprise c
                 JOIN   c.accesreferenceservice a
                 WHERE  a.usager = :usager
                 AND    c.lue != :lue'
            )->setParameter('usager', $usager)
             ->setParameter('lue', 'oui')
             ->getResult();
    }
    
      public function findOneById($id)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT c FROM AppBundle:CourrierEntreprise c
                 WHERE  c.id = :id'
            )->setParameter('id', $id)
            ->getResult();
    }
}
