# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value
    documents_directory: '%kernel.project_dir%/web/uploads/documents/'
    logos_directory: '%kernel.project_dir%/web/uploads/logos/'
services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
        # explicit commands registration
    AppBundle\Command\:
        resource: '../../src/AppBundle/Command/*'
        tags: ['console.command']
      
    #  Configuration Not Route Found Exception
    kernel.listener.kernel_request:
       class: AppBundle\EventListener\ErrorRedirect
       arguments:
           $router: "@router"
       tags:
           - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
     
    #  Configuration Inactive Sessioin Time
#    app.handler.session_idle:
#        class: AppBundle\Handler\SessionIdleHandler
#        arguments: ["@session", "@security.token_storage", "@router", "%session_max_idle_time%"]
#        tags:
#            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }